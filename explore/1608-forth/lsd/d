\ load development code
\ needs l

reset

: blink ( -- )  \ blink the on-board LED until a key is pressed
  OMODE-PP LED1 io-mode!
  begin
    LED1 iox!
    1000000 0 do loop
  key? until ;

: rtctry ( -- )  +i2c  0 0 rtc!  begin  0 rtc@ $FF and .  key? until ;
: adctry ( -- )  +adc  begin  PB0 adc .  key? until ;
: uartry ( -- )  +uart uart. ;

: ledon LED2 ioc! ;
: ledoff LED2 ios! ;
: busy ( u -- ) 100 * 0 ?do loop ;
: %pwm ( pct -- )
  begin
    ledon  dup busy
    ledoff  100 over - busy
  key? until ;

\ try out on-board WinBond W25Q16 2 MB flash memory

256 buffer: membuf
membuf 256 0 fill

: memtry ( -- )
  spi-init PA2 ssel ! spi-init
  smem-id hex. 
\ smem-wipe
  $10 smem-erase
  c" abcde" $10 >smem
  c" ABCDEF" $11 >smem
  c" ghijklm" $12 >smem
  membuf $10 smem>  membuf count dup . type space
  membuf $11 smem>  membuf count dup . type space
  membuf $12 smem>  membuf count dup . type space
;

\ -----------------------------------------------------------------------------

\ -----------------------------------------------------------------------------

\ 10 %pwm
\ vim: set ft=forth :
