\ install library packages in flash
\ needs h
\ includes d

( cornerstone ) <<<hal-oxs>>>
compiletoflash

( code-start, see code-size below ) here

\ include ../flib/sdcard.fs
include ../flib/rf69.fs
include ../flib/oled.fs
include ../mlib/graphics.fs
include ../mlib/multi.fs

PA0 constant VAC-IN
PB0 constant VBAT-IN
PB1 constant VBAT-GND
PB5 constant DCF77-IN
PC0 constant CT1
PC1 constant CT2
PC2 constant CT3
PC3 constant PULSE1
PC4 constant PULSE2
PC5 constant PULSE3

\ TODO this no longer works, need to switch to injecting a channel
: vbat ( -- mvolt )
  VBAT-IN adc 3300 * 4 * 4095 / ;

: config-pins ( -- )
  +adc
  +uart-irq ( uart. )

  omode-pp   VBAT-GND io-mode!  VBAT-GND ioc!
  imode-pull DCF77-IN io-mode!  DCF77-IN ioc!
  imode-pull PULSE1   io-mode!  PULSE1 ioc!
  imode-pull PULSE2   io-mode!  PULSE2 ioc!
  imode-pull PULSE3   io-mode!  PULSE3 ioc!
  imode-adc  VAC-IN   io-mode!
  imode-adc  VBAT-IN  io-mode!
  imode-adc  CT1      io-mode!
  imode-adc  CT2      io-mode!
  imode-adc  CT3      io-mode!
;

\ -----------------------------------------------------------------------------
\ set up quad-ADC sampling via DMA

    ADC1 $0C + constant ADC1-SMPR1
    ADC1 $10 + constant ADC1-SMPR2

                               4 constant #adcs
                             800 constant #asamples
                               2 constant #abuffers
#adcs #asamples * #abuffers * 2* constant #abytes
                              40 constant arate-us
                   arate-us 72 * constant arate-clk
                          #abytes buffer: adata

: quad-adc ( -- )  \ configure ADC and DMA for quad-channel continuous sampling
  +adc  6 us  adc-calib 
  adata #abytes VAC-IN arate-clk adc1-dma
  VAC-IN adc#                 \ channel 0
  CT1    adc#  5 lshift or    \ channel 1
  CT2    adc# 10 lshift or    \ channel 2
  CT3    adc# 15 lshift or    \ channel 3
              ADC1-SQR3 !     \ set up the ADC scan channels
  3 20 lshift ADC1-SQR1 !     \ four scan channels
         8 bit ADC1-CR1 bis!  \ enable SCAN mode
  \ optionally increase the ADC sampling times for all channels
  \ %000000011011011011011011011011 ADC1-SMPR1 !
  \ %011011011011011011011011011011 ADC1-SMPR2 !
;

: check-dma-rate ( -- )  \ report DMA-done cycle times until key hit
  micros begin
    begin DMA1-ISR @ until
    micros dup rot - .
    DMA1-ISR @ dup . DMA1-IFCR !
  key? until drop ;

\ -----------------------------------------------------------------------------
\ track the timing of three pulse counters via rising edge interrupts

$E000E100 constant NVIC-EN0R \ IRQ 0 to 31 Set Enable Register

AFIO $8 + constant AFIO-EXTICR1
AFIO $C + constant AFIO-EXTICR2

$40010400 constant EXTI
    EXTI $00 + constant EXTI-IMR
    EXTI $08 + constant EXTI-RTSR
    EXTI $0C + constant EXTI-FTSR
    EXTI $14 + constant EXTI-PR

0 0 2variable pulses1  \ last millis and pulse count #1
0 0 2variable pulses2  \ last millis and pulse count #2
0 0 2variable pulses3  \ last millis and pulse count #3

: ext3-tick ( -- )  \ interrupt handler for EXTI3
  3 bit EXTI-PR !  \ clear interrupt
  millis pulses1 1 over +! cell+ ! ;

: ext4-tick ( -- )  \ interrupt handler for EXTI4
  4 bit EXTI-PR !  \ clear interrupt
  millis pulses2 1 over +! cell+ ! ;

: ext5-tick ( -- )  \ interrupt handler for EXTI9_5
  5 bit EXTI-PR !  \ clear interrupt
  millis pulses3 1 over +! cell+ ! ;

: count-pulses ( -- )  \ set up and start the external interrupts
       ['] ext3-tick irq-exti3 !     \ install interrupt handler EXTI 3
       ['] ext4-tick irq-exti4 !     \ install interrupt handler EXTI 4
       ['] ext5-tick irq-exti5 !     \ install interrupt handler EXTI 5-9

               9 bit NVIC-EN0R bis!  \ enable EXTI3 interrupt 9
  %0010 12 lshift AFIO-EXTICR1 bis!  \ select P<C>3
                3 bit EXTI-IMR bis!  \ enable PC<3>
               3 bit EXTI-RTSR bis!  \ trigger on PC<3> rising edge

              10 bit NVIC-EN0R bis!  \ enable EXTI4 interrupt 10
            %0010 AFIO-EXTICR2 bis!  \ select P<C>4
                4 bit EXTI-IMR bis!  \ enable PC<4>
               4 bit EXTI-RTSR bis!  \ trigger on PC<4> rising edge

              23 bit NVIC-EN0R bis!  \ enable EXTI9_5 interrupt 23
   %0010 4 lshift AFIO-EXTICR2 bis!  \ select P<C>5
                5 bit EXTI-IMR bis!  \ enable PC<5>
               5 bit EXTI-RTSR bis!  \ trigger on PC<5> rising edge
;

\ -----------------------------------------------------------------------------

( code-size ) here swap - .
cornerstone <<<lib-oxs>>>
( flash-end ) here hex.
include d
\ vim: set ft=forth :
