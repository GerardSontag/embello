\ load development code
\ needs l

reset

: blink ( -- )  \ blink the on-board LED until a key is pressed
  OMODE-PP LED1 io-mode!
  begin
    LED1 iox!
    1000000 0 do loop
  key? until ;

: tftry tft-init clear TFT-BL ios! demo ;

: pwmtry ( -- )  1 LED2 +pwm 100 LED2 pwm ;

\ -----------------------------------------------------------------------------

: sleep ( -- ) [ $BF30 h, ] inline ;  \ WFI Opcode, enters sleep mode

      PWR $4 + constant PWR-CSR

$E000ED00 constant SCB
     SCB $14 + constant SCB-SCR

: standby ( -- )  \ go into low-power standby mode
  2 bit PWR-CR bis!  \ CWUF
  1 bit PWR-CR bis!  \ PDDS
  2 bit SCB-SCR bis!  \ SLEEPDEEP
  sleep ;

\ TODO not working, not even with OMODE-AF-OD PA0 io-mode!
: ena-wup ( -- )  \ enable wakeup pin
  8 bit PWR-CSR bis! ;

\ -----------------------------------------------------------------------------

: sd>slow> ( c -- c )  \ bit-banged SPI, 8 bits, well under 400 KHz
  8 0 do
    dup $80 and MOSI io!
    2 us  SCLK ios!  2 us
    shl
    MISO io@ or
    2 us  SCLK ioc!  2 us
  loop
  $FF and ;

: sd-slow ( u -- )
  -spi 2 us +spi 2 us
  dup 24 rshift dup $3F and [char] # emit . sd>slow> drop
              0 sd>slow> drop
              0 sd>slow> drop
  dup 16 rshift sd>slow> drop
   dup 8 rshift sd>slow> drop
                sd>slow> drop
            $FF sd>slow> drop
            $FF sd>slow> . ;

: sd-init ( -- )
  spi-init
  10 0 do $FF sd>slow> drop loop
  +spi
  $40000095 sd-slow  \ CMD0 go idle
\ $41000000 sd-slow  \ CMD1 send op cond
\ $50020000 sd-slow  \ CMD16 send blocklen 512
\ $7B000000 sd-slow  \ CMD59 crc off
\ $4801AA87 sd-slow  \ CMD8 send if cond 3.3v
  $77000000 sd-slow  $69000000 sd-slow  \ ACMD41 send op cond
  200 ms
  $77000000 sd-slow  $69000000 sd-slow  \ ACMD41 send op cond
;

: sd-cmd ( cmd arg -- )
  swap dup $80 and if  $77 0 recurse  $7F and  then
  -spi +spi  begin $FF >spi> $FF = until
  dup $3F and .
                >spi
  dup 24 rshift >spi
  dup 16 rshift >spi
   dup 8 rshift >spi
                >spi
              0 >spi
            $FF >spi
            $FF >spi> . ;

: w begin $FF >spi> dup . $FE = until ;
: s $FF >spi> h.2 space ;

: sdtry
  sd-init cr
  $CD 0            sd-cmd w s s s s s s s s s s s s s s s s cr  \ ACMD13
  $49 0            sd-cmd w s s s s s s s s s s s s s s s s cr  \ CMD9
  $50 4            sd-cmd                                   cr  \ CMD16
  $51 $1C6         sd-cmd w s s s s s s s s s s s s s s s s cr  \ CMD17
  $50 $200         sd-cmd                                   cr  \ CMD16
  $51 $83 9 lshift sd-cmd w s s s s s s s s s s s s s s s s cr  \ CMD17
;

\ -----------------------------------------------------------------------------
\ vim: set ft=forth :
