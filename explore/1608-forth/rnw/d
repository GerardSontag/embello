\ load development code
\ needs l

reset

: blink ( -- )  \ blink the on-board LED until a key is pressed
  OMODE-PP LED io-mode!
  begin
    LED iox!
    1000000 0 do loop
  key? until ;

\ print out received packet info until a key is pressed
\ format: #bytes b3..b0 b7..b4 rssi lna afc
: rftry ( -- )
  42 8686 rf-init
  begin
    rf-recv  ?dup if
      cr . rf.buf @ hex. rf.buf 4 + @ hex. rf.rssi @ . rf.lna @ . rf.afc @ .
    then
  key? until ;

: tftry ( -- ) lcd-init show-logo  10000000 0 do loop  lcd-init demo ;
\ : tftry ( -- ) tft-init demo ;

: rtctry ( -- )  +i2c  0 0 rtc!  begin  0 rtc@ $FF and .  key? until ;
: adctry ( -- )  +adc  begin  PB0 adc .  key? until ;
: uartry ( -- )  +uart uart. ;
: pwmtry ( -- )  7200 LED +pwm 100 LED pwm ;

: txtry ( n - ) 15 rf-power  0 <# #s #> 0 rf-send ;

\ -----------------------------------------------------------------------------
\ -----------------------------------------------------------------------------

\ 10 %pwm
\ lcdtry
\ rftry  \ must be last, continues to run until keypress
\ vim: set ft=forth :
